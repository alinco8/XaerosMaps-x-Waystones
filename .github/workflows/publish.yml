name: Release
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
      versions: ${{ steps.versions.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - run: npm install -g bun
      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-
      - run: bun install --frozen-lockfile
      - id: semver
        run: |
          bunx semantic-release --dry-run
          OUTPUT=$(bunx semantic-release --dry-run || echo "")
          VERSION=$(echo $OUTPUT | grep -oiP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          if [ -z "$VERSION" ]; then
            echo "No new version to release"
            exit 1
          fi
          bun run scripts/prepareRelease.ts $VERSION
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: versions
        run: |
          VERSIONS=$(cd versions && printf '"%s",' * | sed 's/,$//' | sed 's/^/[/' | sed 's/$/]/')
          echo "versions=$VERSIONS" >> $GITHUB_OUTPUT
          echo "Versions: $VERSIONS"
  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        version: ${{ fromJson(needs.prepare.outputs.versions) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
      - run: |
          ./gradlew --parallel --build-cache \
            "Set active project to ${{matrix.version}}" \
            dependencies
      - run: ./gradlew --parallel --build-cache --max-workers=4 --no-daemon build
#      - run: bunx semantic-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
#          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}